{"ast":null,"code":"var _jsxFileName = \"/Users/juangr/Documents/12starupsin12months/1) platesuro/app/platesuro/src/RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantListFlex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid red;\n`;\n_c = RestaurantListFlex;\nconst RestaurantCard = styled.div`\n  flex: 0 0 calc(33.33% - 8px);\n    width: 200px; /* Adjust the width as needed */\n  height: 200px; /* Set the same value as the width to make the cards square */\n  \n  background-color: #fff;\n  border: 1px solid #eaeaea;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 16px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-image: ${props => `url(${require(`./assets/restaurants/${props.logo}`)})`};\n/* Use absolute URL path */\n\n/* Media Queries for Responsive Card Size */\n  @media (max-width: 768px) {\n    width: 100px; /* Adjust width for screens up to 768px */\n    height: 150px; /* Adjust height for screens up to 768px */\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    width: 100px; /* Adjust width for screens between 769px and 1024px */\n    height: 200px; /* Adjust height for screens between 769px and 1024px */\n  }\n\n  /* Add more media queries as needed for other screen sizes */\n`;\n_c2 = RestaurantCard;\nconst RestaurantListGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* Display 3 columns */\n  gap: 16px; /* Adjust the gap between cards */\n  justify-content: center;\n  align-items: center;\n`;\n_c3 = RestaurantListGrid;\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/restaurants').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setRestaurants(data)).catch(error => console.error('Fetch error: ', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Restaurant List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RestaurantListFlex, {\n      children: /*#__PURE__*/_jsxDEV(RestaurantListGrid, {\n        children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n          logo: restaurant.logo,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: '2px solid red',\n              width: '100%',\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [restaurant.Name, \" - \", restaurant.rating, \" - \", restaurant.logo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, restaurant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"UUwaAnmni1jVfIU2TonQ0iTwxYs=\");\n_c4 = RestaurantList;\nexport default RestaurantList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RestaurantListFlex\");\n$RefreshReg$(_c2, \"RestaurantCard\");\n$RefreshReg$(_c3, \"RestaurantListGrid\");\n$RefreshReg$(_c4, \"RestaurantList\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","RestaurantListFlex","div","_c","RestaurantCard","props","require","logo","_c2","RestaurantListGrid","_c3","RestaurantList","_s","restaurants","setRestaurants","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","style","border","width","height","Name","rating","id","_c4","$RefreshReg$"],"sources":["/Users/juangr/Documents/12starupsin12months/1) platesuro/app/platesuro/src/RestaurantList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst RestaurantListFlex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid red;\n`;\n\nconst RestaurantCard = styled.div`\n  flex: 0 0 calc(33.33% - 8px);\n    width: 200px; /* Adjust the width as needed */\n  height: 200px; /* Set the same value as the width to make the cards square */\n  \n  background-color: #fff;\n  border: 1px solid #eaeaea;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 16px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-image: ${(props) => `url(${require(`./assets/restaurants/${props.logo}`)})`};\n/* Use absolute URL path */\n\n/* Media Queries for Responsive Card Size */\n  @media (max-width: 768px) {\n    width: 100px; /* Adjust width for screens up to 768px */\n    height: 150px; /* Adjust height for screens up to 768px */\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    width: 100px; /* Adjust width for screens between 769px and 1024px */\n    height: 200px; /* Adjust height for screens between 769px and 1024px */\n  }\n\n  /* Add more media queries as needed for other screen sizes */\n`;\n\nconst RestaurantListGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* Display 3 columns */\n  gap: 16px; /* Adjust the gap between cards */\n  justify-content: center;\n  align-items: center;\n`;\n\n\n\n\nconst RestaurantList = () => {\n  const [restaurants, setRestaurants] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/restaurants')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => setRestaurants(data))\n      .catch((error) => console.error('Fetch error: ', error));\n  }, []);\n\n  return (\n    <div className='App'>\n      <h2>Restaurant List</h2>\n      <RestaurantListFlex>\n        <RestaurantListGrid >\n        {restaurants.map((restaurant) => (\n          <RestaurantCard key={restaurant.id} logo={restaurant.logo}>\n            <div style={{border:'2px solid red',width:'100%',height:'100%'}}>\n                <p>{restaurant.Name} - {restaurant.rating} - {restaurant.logo}</p>\n             </div>\n            \n          </RestaurantCard>\n        ))}\n        </RestaurantListGrid>\n      </RestaurantListFlex>\n    </div>\n  );\n};\n\n\nexport default RestaurantList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}